<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>APIM_1_10_X_MIGRATION_H2_ORACLE</Name>
<Script>

  <!--setting Throttle Summary data-->
  create temporary table APIThrottleSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_THROTTLED_OUT_SUMMARY");
  CREATE TEMPORARY TABLE THROTTLED_OUT_FINAL_SUMMARY USING CarbonAnalytics OPTIONS (tableName "API_THROTTLED_OUT_SUMMARY",
    schema "api string -i,
    api_version string -i,
    context string -i,
    apiPublisher string -i,
    applicationName string -i,
    tenantDomain string -i,
    year int -i,
    month int -i,
    day int -i,
    week int -i,
    time string -i,
    success_request_count int -i,
    throttleout_count int -i,
    max_request_time long -i,
    api_year_month_week_day_facet facet -i,
    applicationName_facet facet -i",
    primaryKeys "api,api_version,context,apiPublisher,applicationName,tenantDomain,year,month,day"
  );

  insert into table THROTTLED_OUT_FINAL_SUMMARY select
  API,API_VERSION,CONTEXT,APIPUBLISHER,APPLICATIONNAME,TENANTDOMAIN,YEAR,MONTH,
  DAY,WEEK,TIME,SUCCESS_REQUEST_COUNT,THROTTLEOUT_COUNT,
  COALESCE(timestamp(TIME),0), facet5(API,YEAR,MONTH,WEEK,DAY),
  APPLICATIONNAME from APIThrottleSummaryData;



  <!--setting Request Summary data-->

  CREATE TEMPORARY TABLE API_REQUEST_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_REQUEST_SUMMARY",
  schema "api string -i,
  api_version string -i,
  version string -i,
  apiPublisher string -i,
  consumerKey string -i,
  userId string -i,
  context string -i,
  max_request_time long -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  key_api_facet facet -i,
  key_userId_facet facet -i,
  api_version_userId_facet facet -i,
  api_version_userId_apiPublisher_facet facet -i,
  api_version_userId_context_facet facet -i",
  primaryKeys "api,api_version,version,apiPublisher,consumerKey,userId,context,hostName,year,month,day"
  );

  create temporary table APIRequestSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_REQUEST_SUMMARY");

  insert into table API_REQUEST_SUMMARY_FINAL select API, API_VERSION,VERSION, APIPUBLISHER,
  COALESCE(CONSUMERKEY,'-'),
  USERID,
  CONTEXT,
  MAX_REQUEST_TIME,
  TOTAL_REQUEST_COUNT,
  HOSTNAME,
  YEAR,
  MONTH,
  DAY,
  TIME,
  facet2(CONSUMERKEY,API),
  facet2(CONSUMERKEY,USERID),
  facet3(API,VERSION,USERID),
  facet4(API,VERSION,USERID,APIPUBLISHER),
  facet4(API,VERSION,USERID,CONTEXT)
  from APIRequestSummaryData;


  <!--setting API Version Summary data-->

  create temporary table APIVersionUsageSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_VERSION_USAGE_SUMMARY");

  CREATE TEMPORARY TABLE API_VERSION_USAGE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_VERSION_USAGE_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  context string -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  api_version_context_facet facet -i",
  primaryKeys "api,version,apiPublisher,context,hostName,year,month,day"
  );

  insert into table API_VERSION_USAGE_SUMMARY_FINAL select API,VERSION,APIPUBLISHER,CONTEXT,TOTAL_REQUEST_COUNT,HOSTNAME,
  YEAR,  MONTH,  DAY,  TIME,  timestamp(TIME),
  facet3(API,VERSION,CONTEXT)
  from APIVersionUsageSummaryData;


  <!--setting API Resource Summary data-->
  create temporary table APIResourcePathUsageSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_Resource_USAGE_SUMMARY");

  CREATE TEMPORARY TABLE API_Resource_USAGE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_Resource_USAGE_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  consumerKey string -i,
  resourcePath string -i,
  context string -i,
  method string -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  key_api_method_path_facet facet -i,
  api_version_context_method_facet facet -i",
  primaryKeys "api,version,apiPublisher,consumerKey,context,resourcePath,method,hostName,year,month,day"
  );

  insert into table API_Resource_USAGE_SUMMARY_FINAL select
  API,VERSION,APIPUBLISHER,COALESCE(CONSUMERKEY,'-'),
  RESOURCEPATH,CONTEXT,METHOD,TOTAL_REQUEST_COUNT,HOSTNAME,
  YEAR,  MONTH,  DAY,  TIME,
  timestamp(TIME),
  facet4(CONSUMERKEY, API, METHOD, RESOURCEPATH),
  facet4(API, VERSION, CONTEXT, METHOD)
  from APIResourcePathUsageSummaryData;



  <!--setting Response Summary data-->
  create temporary table APIResponseSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_RESPONSE_SUMMARY");

  CREATE TEMPORARY TABLE API_RESPONSE_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_RESPONSE_SUMMARY",
  schema "api_version string -i,
  apiPublisher string -i,
  context string -i,
  serviceTime int -i,
  total_response_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  api_version_context_facet facet -i",
  primaryKeys "api,version,apiPublisher,context,hostName,year,month,day"
  );

  insert into table API_RESPONSE_SUMMARY_FINAL select
  API_VERSION,  COALESCE(APIPUBLISHER,'-'),  CONTEXT,  SERVICETIME,  TOTAL_RESPONSE_COUNT,
  HOSTNAME,  YEAR,  MONTH,  DAY,  TIME,  timestamp(TIME),
  facet2(API_VERSION, CONTEXT)
  from APIResponseSummaryData;


  <!--setting Fault Summary data-->
  create temporary table APIFaultSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_FAULT_SUMMARY");

  CREATE TEMPORARY TABLE API_FAULT_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_FAULT_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  consumerKey string -i,
  context string -i,
  total_fault_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  consumerKey_api_facet facet -i,
  api_version_apiPublisher_context_facet facet -i",
  primaryKeys "api,version,apiPublisher,consumerKey,context,hostName,year,month,day"
  );

  insert into table API_FAULT_SUMMARY_FINAL select
  API,VERSION,APIPUBLISHER,COALESCE(CONSUMERKEY,'-'),CONTEXT,  TOTAL_FAULT_COUNT,
  HOSTNAME,YEAR,  MONTH,  DAY,  TIME, timestamp(TIME),
  facet2(CONSUMERKEY, API),
  facet4(API, VERSION, APIPUBLISHER, CONTEXT)
  from APIFaultSummaryData;


  <!--setting Destination Summary data-->
  create temporary table APIDestinationDataSummaryData using CarbonJDBC options (dataSource "WSO2AM_STATS_MIG_DB", tableName "API_DESTINATION_SUMMARY");
  CREATE TEMPORARY TABLE API_DESTINATION_SUMMARY_FINAL USING CarbonAnalytics OPTIONS (tableName "API_DESTINATION_SUMMARY",
  schema "api string -i,
  version string -i,
  apiPublisher string -i,
  context string -i,
  destination string -i,
  total_request_count int -i,
  hostName string -i,
  year int -i,
  month int -i,
  day int -i,
  time string -i,
  max_request_time long -i,
  api_version_context_dest_facet facet -i",
  primaryKeys "api,version,apiPublisher,context,destination,hostName,year,month,day"
  );

  insert into table API_DESTINATION_SUMMARY_FINAL select
  API,VERSION,APIPUBLISHER, CONTEXT,COALESCE(DESTINATION,'-'),TOTAL_REQUEST_COUNT,HOSTNAME,
  YEAR,  MONTH,  DAY,  TIME, timestamp(TIME),
  facet4(API, VERSION, CONTEXT, COALESCE(DESTINATION,'-'))
  from APIDestinationDataSummaryData;

     
                                                                                                                                                        
</Script>
   
</Analytics>
